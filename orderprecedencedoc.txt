Highest precedence 18 to lowest precedence 1

- Not all syntax included here are "operators" in the strict sense. For example, spread ...
and arrow => are typically not regarded as operators. 

18: grouping 
- how it looks:
(x) 
- associativity (the direction):
n/a

17: access and call
17a: member access
- how it looks:
x.year
- associativity (the direction):
left-to-right

17b: optional chaining 
- how it looks:
x?.y
- associativity (the direction):
left-to-right

17c: computer member access
- how it looks:
x[y]
- associativity (the direction):
n/a

17d: function call 
- how it looks:
x(y)
- associativity (the direction):
n/a

16: new 
new without argument list 
- how it looks:
new x
- associativity (the direction):
n/a

15: postfix operators
15a: postfix increment
postfix increment
- how it looks:
x++
- associativity (the direction):
n/a

15b: postfix decrement
- how it looks:
x--
- associativity (the direction):
n/a

15c: prefix decrement
- how it looks:
--x
- associativity (the direction):
n/a                         

14: Prefix Operators
14a: Prefix increments
- how it looks
++x
- associativity (the direction):
n/a

14b: Prefix decrement
- how it looks
--x
- associativity (the direction):
n/a

14c: Logical NOT
- how it looks
!x
- associativity (the direction):
n/a

14d: Bitwise NOT
- how it looks
~x
- associativity (the direction):
n/a 

14e: Unary plus
- how it looks
+x
- associativity (the direction):
n/a 

14f: Unary negation
- how it looks
-x
- associativity (the direction):
n/a

14g: typeof x
- how it looks
typeof x
- associativity (the direction):
n/a

14h: void x
- how it looks
void x
- associativity (the direction):
n/a

14i: delete x
- how it looks
delete x
- associativity (the direction):
n/a

14j: await x
- how it looks
await x
- associativity (the direction):
n/a

13: exponation
- how it looks
x ** y
- associativity (the direction):
left-to-right

12: multiplicative operators
- how it looks
x * y
x / y
x % y
- associativity (the direction):
left-to-right

11: additive operators 
-how it looks
x + y
x - y
- associativity (the direction):
left-to-right

10: bitwise shift 
- how it looks
x << y - left shift
x >> y - right shift
x >>> y - unsigned right shift

9: relational operators

2: assignment and miscellaneous 
- how it looks
x = y
x += y
x -= y
x **= y
x *= y
x /= y
x %=y
x <<= y
x >>= y
x >>>= y
x &= y
x ^= y
x |= y
x &&= y
x ||= y
x ??= y

- associativity (the direction):
right-to-left

1: comma operator
- how it looks 
x, y
- associativity (the direction):
left-to-right

















